group 'com.octo.nicolasmouchel'
version '1.0-SNAPSHOT'

apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    maven{
        url uri('https://github.com/joel1di1/joel1di1-mvn-repo/raw/master/releases/')
    }
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile gradleApi()
    compile localGroovy()

    compile 'com.appaloosa-store:appaloosa-client:1.2.0'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

bintray {
    publications = ['Publication']

    user = properties.getProperty('bintray.user')
    key = properties.getProperty('bintray.apikey')

    configurations = ['published', 'archives']

    dryRun = false
    publish = true

    pkg {
        repo = 'maven'
        name = 'custom-searchable'

        desc = 'This repository contains a library that aims to provide a custom searchable interface for android applications'

        websiteUrl = 'https://github.com/...'
        issueTrackerUrl = 'https://github.com/.../issues'
        vcsUrl = 'https://github.com/....git'

        licenses = ['The Apache Software License, Version 2.0']
        labels = ['android', 'deployment', 'continous', 'UDD']
        publicDownloadNumbers = true
    }
}

publishing {
    publications {
        Publication(MavenPublication) {
            groupId 'com.octo.nicolasmouchel'
            artifactId 'appaloosa-deploy'
            version '1.0-SNAPSHOT'

            from components.java

            artifact sourceJar {
                classifier "sources"
            }
                repositories {
                    repository {
                        id 'myrepo'
                        url 'http//my.repo.com'
                    }
                }

        }
    }
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url "$buildDir/repo"
        }

        bintray {
            url "https://api.bintray.com/maven/codearte/public/fairyland"
            credentials {
                username = bintrayUser
                password = bintrayKey
            }
        }
    }
}